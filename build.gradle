import java.text.SimpleDateFormat

/*
 * This build file was auto generated by running the Gradle 'init' task
 * by '123' at '14-6-18 下午12:20' with Gradle 1.12
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at http://gradle.org/docs/1.12/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'eclipse'
apply plugin: 'jetty'


ext {
    springVersion = "3.2.2.RELEASE"
    jacksonVersion = "2.3.3"
    environment = "prod"
}

if(hasProperty("env")) {
    ext.environment = "$env"
}

ext.env = ext.environment

apply from: 'tasks.gradle'

processResources.dependsOn copyConfiguration

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

sourceCompatibility = 1.7

version = '1.0-'
if(env.startsWith('dev')) {
    version += 'dev'
}else {
    version += env
}

if (!"dev".equals(env.toString())) {
    version += '-' + new SimpleDateFormat("yyyyMMdd_HHmmss").format(new Date())
}

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'maven central' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    mavenCentral()
    flatDir {
        dirs 'libs'
    }
}

configurations {
    compile.exclude group: 'commons-logging'
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.7',
            'org.slf4j:jcl-over-slf4j:1.7.7',
            'redis.clients:jedis:2.4.2',
            //'ch.qos.logback:logback-core:1.1.2',
            'ch.qos.logback:logback-classic:1.1.2',
            'org.apache.httpcomponents:httpclient:4.3.4',
            'org.quartz-scheduler:quartz:2.2.1',
            'com.google.guava:guava:17.0',
            'commons-collections:commons-collections:3.2.1',
            'com.googlecode.json-simple:json-simple:1.1.1',
            'com.google.code.gson:gson:2.2.4',
            'commons-lang:commons-lang:2.6',
            "org.springframework:spring-context:$springVersion",
            "org.springframework:spring-webmvc:$springVersion",
            "org.springframework:spring-context-support:$springVersion",
            "org.springframework:spring-tx:$springVersion",
            "org.springframework:spring-jdbc:$springVersion",
            "org.springframework.data:spring-data-redis:1.2.1.RELEASE",
            "org.mybatis:mybatis:3.2.7",
            "org.mybatis:mybatis-spring:1.2.2",
            "com.jolbox:bonecp:0.8.0.RELEASE",
            "mysql:mysql-connector-java:5.1.31",
            "cglib:cglib-nodep:3.1",
            "org.apache.velocity:velocity:1.7",
            "org.apache.velocity:velocity-tools:2.0",
            "commons-fileupload:commons-fileupload:1.3.1",
            "org.apache.poi:poi:3.10-FINAL",
            "org.apache.poi:poi-ooxml:3.10-FINAL",
            "org.apache.shiro:shiro-core:1.2.3",
            "org.apache.shiro:shiro-web:1.2.3",
            "org.apache.shiro:shiro-spring:1.2.3",
            "com.fasterxml.jackson.core:jackson-databind:$jacksonVersion",
            "com.fasterxml.jackson.core:jackson-annotations:$jacksonVersion",
            "com.fasterxml.jackson.core:jackson-core:$jacksonVersion",
           	'org.jodd:jodd-lagarto:3.5.2',
            'com.caucho:hessian:3.1.5',
            'org.json:json:20140107',
            'io.netty:netty-all:4.0.18.Final',
            "org.springframework:spring-remoting:2.0.8",
            "com.zaxxer:HikariCP-java6:2.3.5",
            "net.dongliu:apk-parser:2.0.12"
    compile name: "bccs-api-3.0.0"
    compile name: "ezmorph-1.0.6"
    compile name: "json-lib-2.4-jdk15"

    providedCompile "javax.servlet:servlet-api:2.5"
    // local libs

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.11'
}

/*
jar {
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    manifest { attributes 'Main-Class': 'net.yuntu.task.Main' }
}
*/

jettyRun {
    jettyRun.contextPath = '/'
    reload = "automatic"
    httpPort 8081
    scanIntervalSeconds = 1
}

war {
    version = ""
    baseName ="ROOT"
}