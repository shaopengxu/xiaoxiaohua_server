<?xml version="1.0" encoding="UTF-8"?>
<!--
       Copyright 2010-2013 the original author or authors.

       Licensed under the Apache License, Version 2.0 (the "License");
       you may not use this file except in compliance with the License.
       You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

       Unless required by applicable law or agreed to in writing, software
       distributed under the License is distributed on an "AS IS" BASIS,
       WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
       See the License for the specific language governing permissions and
       limitations under the License.
-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.u.bops.biz.dal.mapper.UserMapper">

    <!--
  <cache />
  -->

    <select id="countByParam" parameterType="map" resultType="int">
        SELECT count(*)
        FROM users
        <where>
            state = 'A'
            <if test="username != null">
                and username = #{username}
            </if>
        </where>
    </select>

    <select id="queryByParam" parameterType="map" resultType="User">
        SELECT *
        FROM users
        <where>
            state = 'A'
            <if test="username != null">
                and username = #{username}
            </if>
            <if test="companyId != null">
                and company_id = #{companyId}
            </if>
        </where>
        order by id desc
        limit #{offset}, #{rowCount}
    </select>

    <select id="getByParam" parameterType="map" resultType="User">
        SELECT *
        FROM users
        <where>
            state = 'A'
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="username != null">
                and username = #{username}
            </if>
        </where>
        limit 1
    </select>

    <select id="getByUserId" parameterType="Long" resultType="User">
        SELECT *
        FROM users
        <where>
            state = 'A'
            <if test="value != null">
                and id = #{value}
            </if>
        </where>
        limit 1
    </select>

    <select id="getByUserName" parameterType="String" resultType="User">
        SELECT *
        FROM users
        <where>
            state = 'A'
            <if test="value != null">
                and username = #{value}
            </if>
        </where>
        limit 1
    </select>

    <update id="updateById" parameterType="User">
        update users
        SET
        username = #{username},
        gmt_modify = now()
        WHERE id = #{id}
    </update>

    <update id="updatePassword" parameterType="User">
        update users
        SET
        password = #{password},
        gmt_modify = now()
        WHERE id = #{id}
    </update>

    <delete id="deleteById" parameterType="long">
        delete from users
        where id = #{value}
    </delete>

    <insert id="insert" parameterType="User" useGeneratedKeys="true" keyColumn="id" keyProperty="id">
        INSERT INTO users
        (username, password, company_id, user_type, gmt_create, gmt_modify)
        VALUES
        (#{username}, #{password}, #{companyId}, #{userType}, now(), now())
    </insert>
</mapper>